<template>
  <div class="comp-<%= dasherize(name) %>">
    Comp<%= classify(name) %> Working!
  </div>
</template>

<script lang="ts">
import { Component, Prop, Mixins } from 'vue-property-decorator';
import {
  COMPONENT_TYPE,
  CustomizeComponentBase
} from '@/core/dtos/factories.dto';
import { Comp<%= classify(name) %>Adapter, Comp<%= classify(name) %>Output } from './Comp<%= classify(name) %>.adapter';
import { COMP_<%= underscore(name).toLocaleUpperCase() %>_DEFAULT_CONFIG } from './Comp<%= classify(name) %>.default';
import CustomizeComponentFactory from '@/core/factory/component-customize.factory';
import defaultsDeep from 'lodash/defaultsDeep';
import { COMPONENT_CONFIG } from '@/config/component.config';

@Component({})
export default class Comp<%= classify(name) %> extends Mixins(CustomizeComponentFactory)
  implements CustomizeComponentBase {
  @Prop({ type: Object }) <%= camelize(name) %>Config!: Comp<%= classify(name) %>Adapter;
  get Config(): Comp<%= classify(name) %>Adapter {
    return defaultsDeep(
      this.<%= camelize(name) %>Config,
      COMPONENT_CONFIG.<%= camelize(name) %>,
      COMP_<%= underscore(name).toLocaleUpperCase() %>_DEFAULT_CONFIG);
  }
  get output(): Comp<%= classify(name) %>Output {
    return { default: '' };
  }

  type = COMPONENT_TYPE.<%= camelize(name) %>;
}
</script>

<style lang="scss">
@import "<%= exportScssPath %>";

@include b(comp-<%= dasherize(name) %>) {}
</style>
